
version: '2.2'

networks:
  kongpose-net:
    name: kongpose-net
    driver: bridge

services:
  kong-migrations:
    #image: kong-docker-kong-enterprise-edition-docker.bintray.io/kong-enterprise-edition:2.3.3.0-alpine
    #image: kong/kong-gateway:2.4.1.1-alpine
    #image: kong/kong-gateway:2.5.0.2-alpine
    #image: kong/kong-gateway:2.5.1.1-alpine
    #image: kong/kong-gateway:2.6.0.2-alpine
    #image: kong/kong-gateway:2.7.1.0-alpine
    #image: kong/kong-gateway:2.6.0.4-alpine
    image: kong/kong-gateway:2.8.1.1-alpine
    networks:
      - kongpose-net
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      #KONG_PG_DATABASE: kong
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: password
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
    restart: on-failure

  kong-cp:
    #image: kong-docker-kong-enterprise-edition-docker.bintray.io/kong-enterprise-edition:2.3.3.0-alpine
    #image: kong/kong-gateway:2.4.1.1-alpine
    #image: kong/kong-gateway:2.5.0.2-alpine
    #image: kong/kong-gateway:2.5.1.1-alpine
    #image: kong/kong-gateway:2.6.0.2-alpine
    #image: kong/kong-gateway:2.7.1.0-alpine
    #image: kong/kong-gateway:2.6.0.4-alpine
    image: kong/kong-gateway:2.8.1.1-alpine
    mem_limit: 2g
    networks:
      - kongpose-net
    user: "${KONG_USER:-kong}"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./ssl-certs:/tmp/ssl/customcerts
      - ./tracing:/usr/local/kong/tracing
      - ./http_content:/tmp/htdocs
    #  - ../kong-plugin-udp-gelf-log/kong/plugins/udp-gelf-log:/usr/local/share/lua/5.1/kong/plugins/udp-gelf-log
    environment:
      KONG_PROXY_LISTEN: "off"
      KONG_ADMIN_LISTEN: "0.0.0.0:48001, 0.0.0.0:48444 http2 ssl"
      KONG_ADMIN_GUI_LISTEN: "0.0.0.0:48002, 0.0.0.0:48445 http2 ssl"
      KONG_PORTAL_GUI_LISTEN: "0.0.0.0:48003, 0.0.0.0:48446 http2 ssl"
      KONG_PORTAL_API_LISTEN: "0.0.0.0:48004, 0.0.0.0:48447 http2 ssl"
      KONG_STATUS_LISTEN: "0.0.0.0:48100 ssl"
      KONG_CLUSTER_LISTEN: "0.0.0.0:48005"
      KONG_CLUSTER_TELEMETRY_LISTEN: "0.0.0.0:48006"
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      #KONG_PG_HOST: toxiproxy
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_MAX_CONCURRENT_QUERIES: 5
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_GUI_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_GUI_ERROR_LOG: /dev/stderr
      KONG_PORTAL_API_ACCESS_LOG: /dev/stdout
      KONG_PORTAL_API_ERROR_LOG: /dev/stderr
      KONG_PORTAL_GUI_ACCESS_LOG: /dev/stdout
      KONG_PORTAL_GUI_ERROR_LOG: /dev/stderr
      KONG_STATUS_ACCESS_LOG: /dev/stdout
      KONG_STATUS_ERROR_LOG: /dev/stderr
      KONG_STATUS_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_STATUS_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_AUDIT_LOG: "on"
      KONG_ANONYMOUS_REPORTS: "off"
      KONG_VITALS: "on"
      KONG_VITALS_STRATEGY: prometheus
      KONG_VITALS_STATSD_ADDRESS: statsd-exporter:9125
      KONG_VITALS_TSDB_ADDRESS: prometheus:9090
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
      KONG_LOG_LEVEL: "debug"
      KONG_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_ENFORCE_RBAC: "on"
      KONG_ADMIN_API_URI: "https://api.kong.lan"
      #KONG_ADMIN_API_URI: "https://manager.kong.lan/admin"
      KONG_ADMIN_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_ADMIN_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      #KONG_ADMIN_GUI_URL: "https://manager.kong.lan"
      KONG_ADMIN_GUI_URL: "https://manager.kong.lan"
      KONG_ADMIN_GUI_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_ADMIN_GUI_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_ADMIN_GUI_SESSION_CONF: "{ \"cookie_name\": \"manager-session\", \"secret\": \"this_is_my_other_secret\", \"storage\": \"kong\", \"cookie_secure\":true, \"cookie_lifetime\":36000}"
      # Kong Manager auth via BasicAuth
      #KONG_ADMIN_GUI_AUTH: "basic-auth"
      # Kong Manager auth via local LDAP(AD) server
      KONG_ADMIN_GUI_AUTH: "ldap-auth-advanced"
      KONG_ADMIN_GUI_AUTH_CONF: "{\"bind_dn\":\"cn=Administrator,cn=users,dc=ldap,dc=kong,dc=com\",\"ldap_password\":\"Passw0rd\",\"attribute\":\"sAMAccountName\",\"base_dn\":\"cn=Users,dc=ldap,dc=kong,dc=com\",\"cache_ttl\":2,\"header_type\":\"Basic\",\"keepalive\":60000,\"ldap_host\":\"ad-server\",\"ldap_port\":389,\"ldaps\":false,\"start_tls\":false,\"timeout\":10000,\"verify_ldap_host\": false, \"log_search_results\":true }"
      #KONG_ADMIN_GUI_AUTH: "openid-connect"
      #Kong Manager auth via OIDC & Auth0
      #KONG_ADMIN_GUI_AUTH_CONF: "{\"auth_methods\":[\"authorization_code\"],\"client_id\":[\"nXSQjPrb12T73C0zj5dnCoQ7e96w16MZ\"],\"client_secret\":[\"PZW96frUNv_dydghldnP73aDyeAC1M3-6knRv5pZ_Ia1R2oMksA9hB6x1brR2dHy\"],\"consumer_by\":[\"username\",\"custom_id\"],\"admin_claim\":[\"name\"],\"issuer\":\"https://dev-37bfcwdn.eu.auth0.com\",\"login_redirect_uri\":[\"https://manager.kong.lan/\"],\"logout_methods\":[\"GET\",\"DELETE\",\"POST\"],\"logout_query_arg\":\"logout\",\"logout_redirect_uri\":[\"https://manager.kong.lan/\"],\"redirect_uri\":[\"https://manager.kong.lan/\"],\"scopes\":[\"openid\",\"profile\"],\"session_cookie_name\":\"kong_manager_session\",\"ssl_verify\":false}"
      #KONG_ADMIN_GUI_AUTH_CONF: "{\"auth_methods\":[\"authorization_code\",\"session\"],\"client_id\":[\"YXPZvq2qa1Q79cUVD4aG12Kz8fg68XNn\"],\"client_secret\":[\"nWTVdUbNsTmZ9h559uVtAomWcazktAF9_79Bgz7Q6_P1FKDKwsFFKWNS6RdphcuN\"],\"consumer_by\":[\"username\",\"custom_id\"],\"consumer_claim\":[\"name\"],\"issuer\":\"https://dev-9kacf84s.eu.auth0.com\",\"login_redirect_uri\":[\"https://manager.kong.lan/\"],\"logout_methods\":[\"GET\",\"DELETE\",\"POST\"],\"logout_query_arg\":\"logout\",\"logout_redirect_uri\":[\"https://manager.kong.lan/\"],\"redirect_uri\":[\"https://manager.kong.lan/\"],\"scopes\":[\"openid\",\"profile\"],\"session_cookie_name\":\"kong_manager_session\",\"ssl_verify\":false}"
      # Kong Manager auth via OIDC & Azure AD
      #KONG_ADMIN_GUI_AUTH_CONF: "{\"auth_methods\":[\"authorization_code\",\"password\"],\"client_id\":[\"56dcc8b3-f4b7-4476-b6e8-a84f7c25a9f3\"],\"client_secret\":[\"N6Y8Q~rGpTSLmIg_Yz0bbDYi~kxKo~lD5tjvVdyu\"],\"consumer_by\":[\"username\",\"custom_id\"],\"admin_claim\":\"name\",\"issuer\":\"https://login.microsoftonline.com/b999c898-6df1-434e-a8d9-c969f79bcd41/v2.0/.well-known/openid-configuration\",\"login_redirect_uri\":[\"https://manager.kong.lan/\"],\"logout_methods\":[\"GET\",\"DELETE\",\"POST\"],\"logout_query_arg\":\"logout\",\"logout_redirect_uri\":[\"https://manager.kong.lan/\"],\"redirect_uri\":[\"https://manager.kong.lan/\"],\"scopes\":[\"openid\",\"profile\",\"email\",\"56dcc8b3-f4b7-4476-b6e8-a84f7c25a9f3/.default\"],\"session_cookie_name\":\"kong_manager_session\",\"ssl_verify\":false, \"authenticated_groups_claim\":[\"groups\"]}"
      # Without groups claim
      #KONG_ADMIN_GUI_AUTH_CONF: "{\"auth_methods\":[\"authorization_code\",\"password\"],\"client_id\":[\"56dcc8b3-f4b7-4476-b6e8-a84f7c25a9f3\"],\"client_secret\":[\"N6Y8Q~rGpTSLmIg_Yz0bbDYi~kxKo~lD5tjvVdyu\"],\"consumer_by\":[\"username\",\"custom_id\"],\"admin_claim\":\"name\",\"issuer\":\"https://login.microsoftonline.com/b999c898-6df1-434e-a8d9-c969f79bcd41/v2.0/.well-known/openid-configuration\",\"login_redirect_uri\":[\"https://manager.kong.lan/\"],\"logout_methods\":[\"GET\",\"DELETE\",\"POST\"],\"logout_query_arg\":\"logout\",\"logout_redirect_uri\":[\"https://manager.kong.lan/\"],\"redirect_uri\":[\"https://manager.kong.lan/\"],\"scopes\":[\"openid\",\"profile\",\"email\",\"56dcc8b3-f4b7-4476-b6e8-a84f7c25a9f3/.default\"],\"session_cookie_name\":\"kong_manager_session\",\"ssl_verify\":false}"
      KONG_PORTAL: "on"
      KONG_PORTAL_GUI_PROTOCOL: "https"
      #KONG_PORTAL_GUI_HOST: "portal.kong.lan"
      KONG_PORTAL_GUI_HOST: "manager.kong.lan/portal"
      KONG_PORTAL_GUI_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_PORTAL_GUI_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      #KONG_PORTAL_API_URL: "https://portal-api.kong.lan"
      KONG_PORTAL_API_URL: "https://manager.kong.lan/portal-api"
      KONG_PORTAL_API_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_PORTAL_API_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_PORTAL_AUTH: "openid-connect"
      # Kong DevPortal auth via OIDC & KeyCloak
      #KONG_PORTAL_AUTH_CONF: "{\"client_secret\":[\"ab523f45-e04a-43ec-bac7-2e268c2ff05c\"],\"redirect_uri\":[\"https://portal-api.kong.lan/default/auth\"],\"consumer_by\":[\"username\",\"custom_id\",\"id\"],\"scopes\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"logout_query_arg\":\"logout\",\"logout_methods\":[\"GET\"],\"login_action\":\"redirect\",\"logout_redirect_uri\":[\"https://portal.kong.lan/default\"],\"client_id\":[\"kong\"],\"issuer\":\"https://keycloak.kong.lan:18443/auth/realms/kong/.well-known/openid-configuration\",\"forbidden_redirect_uri\":[\"https://portal.kong.lan/default/unauthorized\"],\"leeway\":100,\"login_redirect_uri\":[\"https://portal.kong.lan/default\"],\"ssl_verify\":false,\"consumer_claim\":[\"email\"],\"login_redirect_mode\":\"query\",\"session_cookie_domain\": \".kong.lan\",\"by_username_ignore_case\":true}"
      # Kong DevPortal auth via OIDC & Okta
      # KONG_PORTAL_AUTH_CONF: "{\"client_secret\":[\"7zxU14d1b5NTNf31p5lhShVX1N1UfWp3BHayU8kw\"],\"redirect_uri\":[\"https://portal-api.kong.lan/default/auth\"],\"consumer_by\":[\"username\",\"custom_id\",\"id\"],\"scopes\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"logout_query_arg\":\"logout\",\"logout_methods\":[\"GET\"],\"login_action\":\"redirect\",\"logout_redirect_uri\":[\"https://portal.kong.lan/default\"],\"client_id\":[\"0oa4q0et31F47l9Nq4x6\"],\"issuer\":\"https://dev-885513.okta.com/oauth2/default/.well-known/oauth-authorization-server\",\"forbidden_redirect_uri\":[\"https://portal.kong.lan/default/unauthorized\"],\"leeway\":100,\"login_redirect_uri\":[\"https://portal.kong.lan/default\"],\"ssl_verify\":false,\"consumer_claim\":[\"email\"],\"login_redirect_mode\":\"query\",\"session_cookie_domain\": \".kong.lan\"}"
      # Kong DevPortal auth via OIDC & Azure AD
      KONG_PORTAL_AUTH_CONF: "{\"auth_methods\":[\"authorization_code\",\"session\"],\"authorization_cookie_domain\":\".kong.lan\",\"authorization_cookie_samesite\":\"None\",\"authorization_cookie_secure\":true,\"client_id\":[\"62bace34-e93f-4ff1-a51a-f699ba143bfe\"],\"client_secret\":[\"4Mr8Q~SgDFbWd_LApq4jgPXRGDvR0CmQxJW5dbQv\"],\"consumer_by\":[\"username\",\"custom_id\",\"id\"],\"consumer_claim\":[\"email\"],\"forbidden_redirect_uri\":[\"https://manager.kong.lan/unauthorized\"],\"issuer\":\"https://login.microsoftonline.com/b999c898-6df1-434e-a8d9-c969f79bcd41/v2.0/.well-known/openid-configuration\",\"leeway\":100,\"login_action\":\"redirect\",\"login_redirect_mode\":\"query\",\"login_redirect_uri\":[\"https://manager.kong.lan/portal\"],\"logout_methods\":[\"GET\"],\"logout_query_arg\":\"logout\",\"logout_redirect_uri\":[\"https://manager.kong.lan/portal\"],\"redirect_uri\":[\"https://manager.kong.lan/portal-api/auth\"],\"scopes\":[\"openid\",\"profile\",\"email\",\"62bace34-e93f-4ff1-a51a-f699ba143bfe/.default\"],\"session_cookie_domain\":\".kong.lan\",\"session_cookie_samesite\":\"None\",\"session_cookie_secure\":true,\"session_storage\":\"cookie\",\"ssl_verify\":false,\"verify_parameters\":false,\"by_username_ignore_case\":true}"
      KONG_PORTAL_SESSION_CONF: "{\"cookie_name\":\"portal-session\",\"secret\":\"this_is_my_secret\",\"storage\":\"kong\",\"cookie_secure\":true, \"cookie_domain\":\".kong.lan\", \"cookie_samesite\":\"off\"}"
      KONG_PORTAL_EMAIL_VERIFICATION: "off"
      KONG_PORTAL_EMAILS_FROM: "stu@konghq.com"
      KONG_PORTAL_EMAILS_REPLY_TO: "stu@konghq.com"
      KONG_ADMIN_EMAILS_FROM: "stu@konghq.com"
      KONG_ADMIN_EMAILS_REPLY_TO: "stu@konghq.com"
      KONG_SMTP_MOCK: "off"
      KONG_SMTP_ADMIN_EMAILS: "stu@konghq.com"
      KONG_SMTP_HOST: "kongpose_fake-smtp-server_1"
      KONG_SMTP_PORT: 1025
      KONG_SMTP_DOMAIN: "api.kong.lan"
      KONG_TRACING: "off"
      KONG_TRACING_DEBUG_HEADER: "X-Kong-Debug"
      KONG_TRACING_WRITE_ENDPOINT: "/usr/local/kong/tracing/kong-postgres.trc"
      KONG_GENERATE_TRACE_DETAILS: "on"
      KONG_ROLE: control_plane
      KONG_CLUSTER_CERT: /tmp/ssl/customcerts/hybrid/cluster.crt
      KONG_CLUSTER_CERT_KEY: /tmp/ssl/customcerts/hybrid/cluster.key
      KONG_CLUSTER_DATA_PLANE_PURGE_DELAY: 60
      KONG_NGINX_WORKER_PROCESSES: 1
      KONG_EVENT_HOOKS_ENABLED: "on"
      KONG_TRUSTED_IPS: "0.0.0.0/0"
      KONG_REAL_IP_HEADER: "X-Forwarded-For"
      KONG_REAL_IP_RECURSIVE: "on"
      KONG_LUA_SSL_TRUSTED_CERTIFICATE: "system"
      KONG_LUA_SSL_VERIFY_DEPTH: 5
      KONG_NGINX_HTTP_INCLUDE: "/tmp/htdocs/http_server.conf"
      #KONG_KEYRING_ENABLED: "on"
      #KONG_KEYRING_STRATEGY: "cluster"
      #KONG_KEYRING_PUBLIC_KEY: "/tmp/ssl/customcerts/keyring/keyring-public-key.pem"
      #KONG_KEYRING_PRIVATE_KEY: "/tmp/ssl/customcerts/keyring/keyring-private-key.pem"
      #KONG_PLUGINS: "bundled,udp-gelf-log"
      KONG_PLUGINS: "bundled"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  kong-dp:
    #image: kong-docker-kong-enterprise-edition-docker.bintray.io/kong-enterprise-edition:2.3.3.0-alpine
    #image: kong/kong-gateway:2.4.1.1-alpine
    #image: kong/kong-gateway:2.5.0.2-alpine
    #image: kong/kong-gateway:2.5.1.1-alpine
    #image: kong/kong-gateway:2.6.0.1-alpine
    #image: kong/kong-gateway:2.6.0.2-alpine
    #image: kong/kong-gateway:2.7.1.0-alpine
    #image: kong/kong-gateway:2.6.0.4-alpine
    image: kong/kong-gateway:2.8.1.1-alpine
    #mem_limit: 8g
    scale: 1
    networks:
      - kongpose-net
    depends_on:
      kong-cp:
        condition: service_healthy
    volumes:
      - ./ssl-certs:/tmp/ssl/customcerts
      - ./tracing:/usr/local/kong/tracing
     # - ../kong-plugin-udp-gelf-log/kong/plugins/udp-gelf-log:/usr/local/share/lua/5.1/kong/plugins/udp-gelf-log
    environment:
      KONG_ADMIN_LISTEN: "0.0.0.0:48001, 0.0.0.0:48444 http2 ssl reuseport backlog=65536"
      KONG_PROXY_LISTEN: "0.0.0.0:48000, 0.0.0.0:48443 http2 ssl reuseport backlog=65536"
      KONG_STREAM_LISTEN: "0.0.0.0:45555, 0.0.0.0:45556 ssl reuseport backlog=65536"
      KONG_STATUS_LISTEN: "0.0.0.0:48100 ssl"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_DATABASE: "off"
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
      KONG_LOG_LEVEL: "debug"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ANONYMOUS_REPORTS: "off"
      KONG_VITALS: "on"
      KONG_VITALS_STRATEGY: prometheus
      KONG_VITALS_STATSD_ADDRESS: statsd-exporter:9125
      KONG_VITALS_TSDB_ADDRESS: prometheus:9090
      KONG_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_ADMIN_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_ADMIN_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_PORTAL_API_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_PORTAL_API_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_ROLE: data_plane
      KONG_CLUSTER_CERT: /tmp/ssl/customcerts/hybrid/cluster.crt
      KONG_CLUSTER_CERT_KEY: /tmp/ssl/customcerts/hybrid/cluster.key
      KONG_LUA_SSL_TRUSTED_CERTIFICATE: /tmp/ssl/customcerts/hybrid/cluster.crt,system
      KONG_LUA_SSL_VERIFY_DEPTH: 5
      KONG_CLUSTER_CONTROL_PLANE: kongpose_kong-cp_1:48005
      KONG_CLUSTER_TELEMETRY_ENDPOINT: kongpose_kong-cp_1:48006
      KONG_NGINX_WORKER_PROCESSES: 1
      KONG_EVENT_HOOKS_ENABLED: "on"
      KONG_TRUSTED_IPS: "0.0.0.0/0"
      KONG_REAL_IP_HEADER: "X-Forwarded-For"
      KONG_REAL_IP_RECURSIVE: "on"
      #KONG_PLUGINS: "bundled,udp-gelf-log"
      KONG_PLUGINS: "bundled"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  db:
    networks:
      - kongpose-net
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_USER: kong
      # Uncomment if kong version <2.3.2.0 i.e. does not support scram-sha256
      #POSTGRES_HOST_AUTH_METHOD: md5
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true

  ad-server:
    networks:
      - kongpose-net
    image: alpine:3.12.1
    volumes:
            - ./ldap-server:/setup-ad/:ro
    # run as privileged to workaround this issue
    # set_nt_acl_no_snum: fset_nt_acl returned NT_STATUS_ACCESS_DENIED
    privileged: true
    command: >
        sh -c "/setup-ad/setup.sh &&
        bash /setup-ad/seed.sh &&
        samba -i --debuglevel=1"
    ports:
      - "389:389/tcp"
##goingminimal##
##goingminimal##  httpbin:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    image: "kennethreitz/httpbin"
##goingminimal##    scale: 2
##goingminimal###    ports:
##goingminimal###      - "80:80/tcp"
##goingminimal##
##goingminimal### use ./tcpbin/Dockerfile to build a local image for the tcpbin echo repo
##goingminimal### https://github.com/Kong/tcpbin
##goingminimal###
##goingminimal### tcpbin:
##goingminimal###   networks:
##goingminimal###     - kongpose-net
##goingminimal###   image: "tcpbin:latest"
##goingminimal##
##goingminimal##  echo-server:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    image: "jmalloc/echo-server"
##goingminimal###    ports:
##goingminimal###      - "8080:8080/tcp"
##goingminimal##
##goingminimal##  dadjokes:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    image: yesinteractive/dadjokes
##goingminimal###    ports:
##goingminimal###      - "8081:80"
##goingminimal##
##goingminimal##  grpc-server:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    image: "moul/grpcbin"
##goingminimal###   ports:
##goingminimal###     - "7000:9000/tcp"
##goingminimal###     - "7001:9001/tcp"
##goingminimal##
##goingminimal##  keycloak:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    #image: jboss/keycloak:9.0.0
##goingminimal##    image: jboss/keycloak:15.0.2
##goingminimal##    volumes:
##goingminimal##      - ./keycloak/kong-realm.json:/tmp/kong-realm.json
##goingminimal##      - ./ssl-certs/smallstep/wild.kong.lan.key:/etc/x509/https/tls.key
##goingminimal##      - ./ssl-certs/smallstep/wild.kong.lan.pem:/etc/x509/https/tls.crt
##goingminimal##    environment:
##goingminimal##      KEYCLOAK_USER: admin
##goingminimal##      KEYCLOAK_PASSWORD: password
##goingminimal##      KEYCLOAK_IMPORT: /tmp/kong-realm.json -Dkeycloak.profile.feature.upload_scripts=enabled
##goingminimal##    ports:
##goingminimal##      - "8080:8080/tcp"
##goingminimal##      - "18443:8443/tcp"
##goingminimal##
##goingminimal##  redis:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    image: redis:latest
##goingminimal###    ports:
##goingminimal###      - "6379:6379/tcp"
##goingminimal##
##goingminimal##  redis-commander:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    hostname: redis-commander
##goingminimal##    image: rediscommander/redis-commander:latest
##goingminimal##    environment:
##goingminimal##      REDIS_HOSTS: kongpose_redis_1
##goingminimal##    ports:
##goingminimal##    - "8081:8081"
##goingminimal##
##goingminimal##  zipkin:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    image: openzipkin/zipkin
##goingminimal##    ports:
##goingminimal##      - "9411:9411/tcp"
##goingminimal##
##goingminimal##  vault:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    image: vault:latest
##goingminimal##    environment:
##goingminimal##      VAULT_DEV_ROOT_TOKEN_ID: myroot
##goingminimal##      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
##goingminimal###    ports:
##goingminimal###      - "8200:8200/tcp"
##goingminimal##
##goingminimal##  toxiproxy:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    image: "shopify/toxiproxy"
##goingminimal##    ports:
##goingminimal##       - "8474:8474"
##goingminimal##
##goingminimal##  # Create a toxiproxy configuration for postgres latency
##goingminimal##  toxiproxy-config:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    image: "shopify/toxiproxy"
##goingminimal##    entrypoint: > 
##goingminimal##      sh -c "/go/bin/toxiproxy-cli -h toxiproxy:8474 create postgres_network --listen 0.0.0.0:5432 --upstream db:5432;
##goingminimal##             /go/bin/toxiproxy-cli -h toxiproxy:8474 toxic add postgres_network -t latency -a latency=100 -a jitter=50;
##goingminimal##             /go/bin/toxiproxy-cli -h toxiproxy:8474 create proxy_latency --listen 0.0.0.0:8000 --upstream kongpose_httpbin_1:80;
##goingminimal##             /go/bin/toxiproxy-cli -h toxiproxy:8474 toxic add proxy_latency -t latency -a latency=250 -a jitter=150;"

  ha-proxy:
    networks:
      - kongpose-net
    image: haproxy:2.3.5-alpine
    volumes:
      - ./ha-proxy:/usr/local/etc/haproxy:ro
      - ./ssl-certs:/tmp/ssl/customcerts
    depends_on:
      kong-cp:
        condition: service_healthy
      kong-dp:
        condition: service_healthy
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "8000-8004:8000-8004/tcp"
      - "8443-8447:8443-8447/tcp"
      - "8100:8100/tcp"
      - "8181:8181/tcp"
      - "8404:8404/tcp"
      - "9999:9999/tcp"
      - "5555-5556:5555-5556/tcp"

##goingminimal##  deck:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    image: kong/deck:v1.11.0
##goingminimal##    volumes:
##goingminimal##        - ./deck:/tmp/deck:ro
##goingminimal##        - ./ssl-certs:/tmp/ssl-certs:ro
##goingminimal##    environment:
##goingminimal##        DECK_ANALYTICS: "off"
##goingminimal##        DECK_KONG_ADDR: "http://kongpose_kong-cp_1:48001"
##goingminimal##        DECK_HEADERS: "kong-admin-token:password"
##goingminimal##    depends_on:
##goingminimal##      kong-cp:
##goingminimal##        condition: service_healthy
##goingminimal##      kong-dp:
##goingminimal##        condition: service_healthy
##goingminimal##    entrypoint: >
##goingminimal##      sh -c "/usr/local/bin/deck sync --workspace default --state /tmp/deck/default-entities.yaml;
##goingminimal##             /usr/local/bin/deck sync --workspace haproxy-hc --state /tmp/deck/hc-entities.yaml;
##goingminimal##             /usr/local/bin/deck sync --workspace mtls --state /tmp/deck/mtls-entities.yaml;"
##goingminimal##
##goingminimal##  locust:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    image: locustio/locust
##goingminimal##    #ports:
##goingminimal##    # - "8089:8089"
##goingminimal##    volumes:
##goingminimal##      - ./locust:/mnt/locust
##goingminimal##    command: -f /mnt/locust/locustfile.py
##goingminimal##  fake-smtp-server:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    image: reachfive/fake-smtp-server
##goingminimal##    #ports:
##goingminimal##      #- "25:1025/tcp"
##goingminimal##      #- "1080:1080/tcp"
##goingminimal##
##goingminimal##  mongodb:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    image: mongo:4.2
##goingminimal##    healthcheck:
##goingminimal##      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin --quiet | grep 1
##goingminimal##      interval: 10s
##goingminimal##      timeout: 10s
##goingminimal##      retries: 3
##goingminimal##
##goingminimal##  elasticsearch:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.0
##goingminimal##    healthcheck:
##goingminimal##        test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
##goingminimal##        interval: 30s
##goingminimal##        timeout: 30s
##goingminimal##        retries: 3    
##goingminimal##    environment:
##goingminimal##      - http.host=0.0.0.0
##goingminimal##      - transport.host=localhost
##goingminimal##      - network.host=0.0.0.0
##goingminimal##      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
##goingminimal##    ulimits:
##goingminimal##      memlock:
##goingminimal##        soft: -1
##goingminimal##        hard: -1
##goingminimal##    mem_limit: 1g
##goingminimal##
##goingminimal##  graylog:
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    image: graylog/graylog:4.0.7
##goingminimal##    volumes:
##goingminimal##      #- ./graylog/server.conf:/etc/graylog/server.conf
##goingminimal##      - ./graylog/content_packs:/usr/share/graylog/data/contentpacks
##goingminimal##    depends_on:
##goingminimal##      mongodb:
##goingminimal##        condition: service_healthy
##goingminimal##      elasticsearch:
##goingminimal##        condition: service_healthy
##goingminimal##    environment:
##goingminimal##      # CHANGE ME (must be at least 16 characters)!
##goingminimal##      GRAYLOG_PASSWORD_SECRET: somepasswordpepper
##goingminimal##      # Password: admin
##goingminimal##      GRAYLOG_ROOT_PASSWORD_SHA2: 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
##goingminimal##      GRAYLOG_HTTP_EXTERNAL_URI: https://graylog.kong.lan/
##goingminimal##      GRAYLOG_HTTP_PUBLISH_URI: https://graylog.kong.lan/
##goingminimal##      GRAYLOG_CONTENT_PACKS_LOADER_ENABLED: "true"
##goingminimal##      GRAYLOG_CONTENT_PACKS_DIR: /usr/share/graylog/data/contentpacks
##goingminimal##      GRAYLOG_CONTENT_PACKS_AUTO_INSTALL: kong-log-endpoints.json
##goingminimal##    links:
##goingminimal##      - mongodb:mongo
##goingminimal##      - elasticsearch
##goingminimal##    ports:
##goingminimal##      # Graylog web interface and REST API
##goingminimal##      - 9000:9000
##goingminimal##      # Syslog TCP
##goingminimal##      #- 1514:1514
##goingminimal##      # Syslog UDP
##goingminimal##      #- 1514:1514/udp
##goingminimal##      # GELF TCP
##goingminimal##      #- 12201:12201
##goingminimal##      # GELF UDP
##goingminimal##      #- 12201:12201/udp
##goingminimal##      #- "5555:5555"
##goingminimal##      #- "5555:5555/udp"

  pgadmin:
    networks:
      - kongpose-net
    image: dpage/pgadmin4
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
      - ./pgadmin/config_local.py:/pgadmin4/config_local.py
        #  - ./pgadmin_data/pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "stu@konghq.com"
      PGADMIN_DEFAULT_PASSWORD: "password"
      PGADMIN_LISTEN_PORT: 7071
    ports:
     - "7071:7071"

##goingminimal##  zookeeper:
##goingminimal##    image: 'bitnami/zookeeper:3.6.2'
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal###   ports:
##goingminimal###     - '12181:12181'
##goingminimal###   volumes:
##goingminimal###     - zk-1:/bitnami/zookeeper
##goingminimal##    environment:
##goingminimal##      - ALLOW_ANONYMOUS_LOGIN=yes
##goingminimal##      - ZOO_PORT_NUMBER=12181
##goingminimal##      - ZOO_SERVER_ID=1
##goingminimal##      - ZOO_SERVERS=0.0.0.0:2888:3888
##goingminimal##      - ZOO_TICK_TIME=2000
##goingminimal##      - ZOO_INIT_LIMIT=10
##goingminimal##      - ZOO_SYNC_LIMIT=5
##goingminimal##      - ZOO_MAX_CLIENT_CNXNS=60
##goingminimal##      - ZOO_HEAP_SIZE=1024
##goingminimal##      - ZOO_AUTOPURGE_PURGEINTERVAL=72
##goingminimal##      - ZOO_AUTOPURGE_SNAPRETAINCOUNT=3
##goingminimal##
##goingminimal##  kafka:
##goingminimal##    #image: 'bitnami/kafka:2.7.0'
##goingminimal##    image: 'bitnami/kafka:2.2.1'
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal###   ports:
##goingminimal###     - '19093:19093'
##goingminimal##    environment:
##goingminimal##      - KAFKA_CFG_BROKER_ID=101
##goingminimal##      - KAFKA_CFG_ZOOKEEPER_CONNECT=kongpose_zookeeper_1:12181
##goingminimal##      - ALLOW_PLAINTEXT_LISTENER=yes
##goingminimal##      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
##goingminimal##      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:19093
##goingminimal##      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://:9092,EXTERNAL://kafka-1:19093
##goingminimal##      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
##goingminimal##      - KAFKA_CFG_NUM_PARTITIONS=1
##goingminimal##      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
##goingminimal##      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
##goingminimal##      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
##goingminimal##      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
##goingminimal##      - KAFKA_HEAP_OPTS=-Xmx1024m -Xms1024m
##goingminimal##
##goingminimal###   volumes:
##goingminimal###     - 'kafka_data:/bitnami'
##goingminimal##    depends_on:
##goingminimal##      - zookeeper
##goingminimal##
##goingminimal##  kafka-ui:
##goingminimal##    image: 'obsidiandynamics/kafdrop'
##goingminimal##    environment:
##goingminimal##      - KAFKA_BROKERCONNECT=kongpose_kafka_1:9092
##goingminimal##      - SERVER_PORT=8080
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal###   ports:
##goingminimal###     - "8787:8080"
##goingminimal##    depends_on:
##goingminimal##      - kafka
##goingminimal##      - zookeeper
##goingminimal##
##goingminimal### elasticsearch-v:
##goingminimal###   container_name: elasticsearch
##goingminimal###   hostname: elasticsearch
##goingminimal###   networks:
##goingminimal###     - kongpose-net
##goingminimal###   image: docker.elastic.co/elasticsearch/elasticsearch:7.11.2
##goingminimal###   environment:
##goingminimal###     - ES_JAVA_OPTS=-Xms1g -Xmx1g
##goingminimal###     - discovery.type=single-node
##goingminimal##
##goingminimal##  kibana:
##goingminimal##    image: docker.elastic.co/kibana/kibana:7.11.2
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal###   hostname: kibana
##goingminimal###   container_name: kibana
##goingminimal##    ports:
##goingminimal##      - 5601:5601
##goingminimal##
##goingminimal### filebeat:
##goingminimal###   image: docker.elastic.co/beats/filebeat:7.2.0
##goingminimal###   hostname: filebeat
##goingminimal###   networks:
##goingminimal###     - kongpose-net
##goingminimal###   container_name: filebeat
##goingminimal###   user: root
##goingminimal###   volumes:
##goingminimal###     - ./data/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
##goingminimal###     - /var/lib/docker:/var/lib/docker:ro
##goingminimal###     - /var/run/docker.sock:/var/run/docker.sock
##goingminimal##
##goingminimal##  statsd-exporter:
##goingminimal##    image: prom/statsd-exporter:latest
##goingminimal##    #image: kong/statsd-exporter-advanced:0.3.1
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    user: root
##goingminimal##    volumes:
##goingminimal##      - ./statsd-exporter/statsd.rules.yaml:/tmp/statsd.rules.yaml
##goingminimal##    command:
##goingminimal##      - "--statsd.mapping-config=/tmp/statsd.rules.yaml"
##goingminimal##      - "--statsd.listen-unixgram=''"
##goingminimal##
##goingminimal##  prometheus:
##goingminimal##    image: prom/prometheus:v2.35.0
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal##    volumes:
##goingminimal##      - ./prometheus/:/etc/prometheus/
##goingminimal##    command:
##goingminimal##      - "--config.file=/etc/prometheus/prometheus.yaml"
##goingminimal##      - "--log.level=debug"
##goingminimal##    ports:
##goingminimal##      - 9090:9090
##goingminimal##
##goingminimal##  grafana:
##goingminimal##    image: grafana/grafana:7.5.1
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal###   container_name: grafana
##goingminimal##    ports:
##goingminimal##      - 3000:3000
##goingminimal##    environment:
##goingminimal##      - GF_SECURITY_ADMIN_PASSWORD=password
##goingminimal##      - GF_SERVER_DOMAIN=grafana.kong.lan
##goingminimal##
##goingminimal##  opa:
##goingminimal##    image: openpolicyagent/opa:latest
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal###   container_name: opa
##goingminimal###   ports:
##goingminimal###     - "8181:8181"
##goingminimal##    volumes:
##goingminimal##      - ./opa/policies/:/records
##goingminimal##    command: "run --server --addr :8181 /records"
##goingminimal##
##goingminimal### dremio:
##goingminimal###   image: dremio/dremio-oss
##goingminimal###   networks:
##goingminimal###     - kongpose-net
##goingminimal###   ports:
##goingminimal###     - "9047:9047"
##goingminimal###     - "31010:31010"
##goingminimal###     - "45678:45678"
##goingminimal##
##goingminimal##  statsd:
##goingminimal##    image: statsd/statsd
##goingminimal##    networks:
##goingminimal##      - kongpose-net
##goingminimal###   ports:
##goingminimal###     - "8125:8125"
##goingminimal##
##goingminimal###  flask-server:
##goingminimal###    image: flask-app:latest
##goingminimal###    networks:
##goingminimal###      - kongpose-net
##goingminimal###    ports:
##goingminimal###      - "8432:80"
